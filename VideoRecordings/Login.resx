<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tableLayoutPanel6.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>